

-- | <fullname>Amazon Inspector</fullname> <p>Amazon Inspector enables you to analyze the behavior of your AWS resources and to identify potential security issues. For more information, see <a href="http://docs.aws.amazon.com/inspector/latest/userguide/inspector_introduction.html"> Amazon Inspector User Guide</a>.</p>
module AWS.Inspector where

import Control.Monad.Aff (Aff)
import Data.Foreign.NullOrUndefined (NullOrUndefined)
import Data.Map (Map)
import Data.Unit (Unit, unit)

import AWS.Request as AWS

serviceName = "Inspector" :: String


-- | <p>Assigns attributes (key and value pairs) to the findings that are specified by the ARNs of the findings.</p>
addAttributesToFindings :: forall eff. AddAttributesToFindingsRequest -> Aff (err :: AWS.RequestError | eff) AddAttributesToFindingsResponse
addAttributesToFindings = AWS.request serviceName "AddAttributesToFindings" 


-- | <p>Creates a new assessment target using the ARN of the resource group that is generated by <a>CreateResourceGroup</a>. If the <a href="https://docs.aws.amazon.com/inspector/latest/userguide/inspector_slr.html">service-linked role</a> isn’t already registered, also creates and registers a service-linked role to grant Amazon Inspector access to AWS Services needed to perform security assessments. You can create up to 50 assessment targets per AWS account. You can run up to 500 concurrent agents per AWS account. For more information, see <a href="http://docs.aws.amazon.com/inspector/latest/userguide/inspector_applications.html"> Amazon Inspector Assessment Targets</a>.</p>
createAssessmentTarget :: forall eff. CreateAssessmentTargetRequest -> Aff (err :: AWS.RequestError | eff) CreateAssessmentTargetResponse
createAssessmentTarget = AWS.request serviceName "CreateAssessmentTarget" 


-- | <p>Creates an assessment template for the assessment target that is specified by the ARN of the assessment target. If the <a href="https://docs.aws.amazon.com/inspector/latest/userguide/inspector_slr.html">service-linked role</a> isn’t already registered, also creates and registers a service-linked role to grant Amazon Inspector access to AWS Services needed to perform security assessments.</p>
createAssessmentTemplate :: forall eff. CreateAssessmentTemplateRequest -> Aff (err :: AWS.RequestError | eff) CreateAssessmentTemplateResponse
createAssessmentTemplate = AWS.request serviceName "CreateAssessmentTemplate" 


-- | <p>Creates a resource group using the specified set of tags (key and value pairs) that are used to select the EC2 instances to be included in an Amazon Inspector assessment target. The created resource group is then used to create an Amazon Inspector assessment target. For more information, see <a>CreateAssessmentTarget</a>.</p>
createResourceGroup :: forall eff. CreateResourceGroupRequest -> Aff (err :: AWS.RequestError | eff) CreateResourceGroupResponse
createResourceGroup = AWS.request serviceName "CreateResourceGroup" 


-- | <p>Deletes the assessment run that is specified by the ARN of the assessment run.</p>
deleteAssessmentRun :: forall eff. DeleteAssessmentRunRequest -> Aff (err :: AWS.RequestError | eff) Unit
deleteAssessmentRun = AWS.request serviceName "DeleteAssessmentRun" 


-- | <p>Deletes the assessment target that is specified by the ARN of the assessment target.</p>
deleteAssessmentTarget :: forall eff. DeleteAssessmentTargetRequest -> Aff (err :: AWS.RequestError | eff) Unit
deleteAssessmentTarget = AWS.request serviceName "DeleteAssessmentTarget" 


-- | <p>Deletes the assessment template that is specified by the ARN of the assessment template.</p>
deleteAssessmentTemplate :: forall eff. DeleteAssessmentTemplateRequest -> Aff (err :: AWS.RequestError | eff) Unit
deleteAssessmentTemplate = AWS.request serviceName "DeleteAssessmentTemplate" 


-- | <p>Describes the assessment runs that are specified by the ARNs of the assessment runs.</p>
describeAssessmentRuns :: forall eff. DescribeAssessmentRunsRequest -> Aff (err :: AWS.RequestError | eff) DescribeAssessmentRunsResponse
describeAssessmentRuns = AWS.request serviceName "DescribeAssessmentRuns" 


-- | <p>Describes the assessment targets that are specified by the ARNs of the assessment targets.</p>
describeAssessmentTargets :: forall eff. DescribeAssessmentTargetsRequest -> Aff (err :: AWS.RequestError | eff) DescribeAssessmentTargetsResponse
describeAssessmentTargets = AWS.request serviceName "DescribeAssessmentTargets" 


-- | <p>Describes the assessment templates that are specified by the ARNs of the assessment templates.</p>
describeAssessmentTemplates :: forall eff. DescribeAssessmentTemplatesRequest -> Aff (err :: AWS.RequestError | eff) DescribeAssessmentTemplatesResponse
describeAssessmentTemplates = AWS.request serviceName "DescribeAssessmentTemplates" 


-- | <p>Describes the IAM role that enables Amazon Inspector to access your AWS account.</p>
describeCrossAccountAccessRole :: forall eff.  Aff (err :: AWS.RequestError | eff) DescribeCrossAccountAccessRoleResponse
describeCrossAccountAccessRole = AWS.request serviceName "DescribeCrossAccountAccessRole" unit


-- | <p>Describes the findings that are specified by the ARNs of the findings.</p>
describeFindings :: forall eff. DescribeFindingsRequest -> Aff (err :: AWS.RequestError | eff) DescribeFindingsResponse
describeFindings = AWS.request serviceName "DescribeFindings" 


-- | <p>Describes the resource groups that are specified by the ARNs of the resource groups.</p>
describeResourceGroups :: forall eff. DescribeResourceGroupsRequest -> Aff (err :: AWS.RequestError | eff) DescribeResourceGroupsResponse
describeResourceGroups = AWS.request serviceName "DescribeResourceGroups" 


-- | <p>Describes the rules packages that are specified by the ARNs of the rules packages.</p>
describeRulesPackages :: forall eff. DescribeRulesPackagesRequest -> Aff (err :: AWS.RequestError | eff) DescribeRulesPackagesResponse
describeRulesPackages = AWS.request serviceName "DescribeRulesPackages" 


-- | <p>Produces an assessment report that includes detailed and comprehensive results of a specified assessment run. </p>
getAssessmentReport :: forall eff. GetAssessmentReportRequest -> Aff (err :: AWS.RequestError | eff) GetAssessmentReportResponse
getAssessmentReport = AWS.request serviceName "GetAssessmentReport" 


-- | <p>Information about the data that is collected for the specified assessment run.</p>
getTelemetryMetadata :: forall eff. GetTelemetryMetadataRequest -> Aff (err :: AWS.RequestError | eff) GetTelemetryMetadataResponse
getTelemetryMetadata = AWS.request serviceName "GetTelemetryMetadata" 


-- | <p>Lists the agents of the assessment runs that are specified by the ARNs of the assessment runs.</p>
listAssessmentRunAgents :: forall eff. ListAssessmentRunAgentsRequest -> Aff (err :: AWS.RequestError | eff) ListAssessmentRunAgentsResponse
listAssessmentRunAgents = AWS.request serviceName "ListAssessmentRunAgents" 


-- | <p>Lists the assessment runs that correspond to the assessment templates that are specified by the ARNs of the assessment templates.</p>
listAssessmentRuns :: forall eff. ListAssessmentRunsRequest -> Aff (err :: AWS.RequestError | eff) ListAssessmentRunsResponse
listAssessmentRuns = AWS.request serviceName "ListAssessmentRuns" 


-- | <p>Lists the ARNs of the assessment targets within this AWS account. For more information about assessment targets, see <a href="http://docs.aws.amazon.com/inspector/latest/userguide/inspector_applications.html">Amazon Inspector Assessment Targets</a>.</p>
listAssessmentTargets :: forall eff. ListAssessmentTargetsRequest -> Aff (err :: AWS.RequestError | eff) ListAssessmentTargetsResponse
listAssessmentTargets = AWS.request serviceName "ListAssessmentTargets" 


-- | <p>Lists the assessment templates that correspond to the assessment targets that are specified by the ARNs of the assessment targets.</p>
listAssessmentTemplates :: forall eff. ListAssessmentTemplatesRequest -> Aff (err :: AWS.RequestError | eff) ListAssessmentTemplatesResponse
listAssessmentTemplates = AWS.request serviceName "ListAssessmentTemplates" 


-- | <p>Lists all the event subscriptions for the assessment template that is specified by the ARN of the assessment template. For more information, see <a>SubscribeToEvent</a> and <a>UnsubscribeFromEvent</a>.</p>
listEventSubscriptions :: forall eff. ListEventSubscriptionsRequest -> Aff (err :: AWS.RequestError | eff) ListEventSubscriptionsResponse
listEventSubscriptions = AWS.request serviceName "ListEventSubscriptions" 


-- | <p>Lists findings that are generated by the assessment runs that are specified by the ARNs of the assessment runs.</p>
listFindings :: forall eff. ListFindingsRequest -> Aff (err :: AWS.RequestError | eff) ListFindingsResponse
listFindings = AWS.request serviceName "ListFindings" 


-- | <p>Lists all available Amazon Inspector rules packages.</p>
listRulesPackages :: forall eff. ListRulesPackagesRequest -> Aff (err :: AWS.RequestError | eff) ListRulesPackagesResponse
listRulesPackages = AWS.request serviceName "ListRulesPackages" 


-- | <p>Lists all tags associated with an assessment template.</p>
listTagsForResource :: forall eff. ListTagsForResourceRequest -> Aff (err :: AWS.RequestError | eff) ListTagsForResourceResponse
listTagsForResource = AWS.request serviceName "ListTagsForResource" 


-- | <p>Previews the agents installed on the EC2 instances that are part of the specified assessment target.</p>
previewAgents :: forall eff. PreviewAgentsRequest -> Aff (err :: AWS.RequestError | eff) PreviewAgentsResponse
previewAgents = AWS.request serviceName "PreviewAgents" 


-- | <p>Registers the IAM role that grants Amazon Inspector access to AWS Services needed to perform security assessments.</p>
registerCrossAccountAccessRole :: forall eff. RegisterCrossAccountAccessRoleRequest -> Aff (err :: AWS.RequestError | eff) Unit
registerCrossAccountAccessRole = AWS.request serviceName "RegisterCrossAccountAccessRole" 


-- | <p>Removes entire attributes (key and value pairs) from the findings that are specified by the ARNs of the findings where an attribute with the specified key exists.</p>
removeAttributesFromFindings :: forall eff. RemoveAttributesFromFindingsRequest -> Aff (err :: AWS.RequestError | eff) RemoveAttributesFromFindingsResponse
removeAttributesFromFindings = AWS.request serviceName "RemoveAttributesFromFindings" 


-- | <p>Sets tags (key and value pairs) to the assessment template that is specified by the ARN of the assessment template.</p>
setTagsForResource :: forall eff. SetTagsForResourceRequest -> Aff (err :: AWS.RequestError | eff) Unit
setTagsForResource = AWS.request serviceName "SetTagsForResource" 


-- | <p>Starts the assessment run specified by the ARN of the assessment template. For this API to function properly, you must not exceed the limit of running up to 500 concurrent agents per AWS account.</p>
startAssessmentRun :: forall eff. StartAssessmentRunRequest -> Aff (err :: AWS.RequestError | eff) StartAssessmentRunResponse
startAssessmentRun = AWS.request serviceName "StartAssessmentRun" 


-- | <p>Stops the assessment run that is specified by the ARN of the assessment run.</p>
stopAssessmentRun :: forall eff. StopAssessmentRunRequest -> Aff (err :: AWS.RequestError | eff) Unit
stopAssessmentRun = AWS.request serviceName "StopAssessmentRun" 


-- | <p>Enables the process of sending Amazon Simple Notification Service (SNS) notifications about a specified event to a specified SNS topic.</p>
subscribeToEvent :: forall eff. SubscribeToEventRequest -> Aff (err :: AWS.RequestError | eff) Unit
subscribeToEvent = AWS.request serviceName "SubscribeToEvent" 


-- | <p>Disables the process of sending Amazon Simple Notification Service (SNS) notifications about a specified event to a specified SNS topic.</p>
unsubscribeFromEvent :: forall eff. UnsubscribeFromEventRequest -> Aff (err :: AWS.RequestError | eff) Unit
unsubscribeFromEvent = AWS.request serviceName "UnsubscribeFromEvent" 


-- | <p>Updates the assessment target that is specified by the ARN of the assessment target.</p>
updateAssessmentTarget :: forall eff. UpdateAssessmentTargetRequest -> Aff (err :: AWS.RequestError | eff) Unit
updateAssessmentTarget = AWS.request serviceName "UpdateAssessmentTarget" 


newtype AccessDeniedErrorCode = AccessDeniedErrorCode String


-- | <p>You do not have required permissions to access the requested resource.</p>
newtype AccessDeniedException = AccessDeniedException 
  { "Message'" :: (ErrorMessage)
  , "ErrorCode'" :: (AccessDeniedErrorCode)
  , "CanRetry'" :: (Bool)
  }


newtype AddAttributesToFindingsRequest = AddAttributesToFindingsRequest 
  { "FindingArns'" :: (AddRemoveAttributesFindingArnList)
  , "Attributes'" :: (UserAttributeList)
  }


newtype AddAttributesToFindingsResponse = AddAttributesToFindingsResponse 
  { "FailedItems'" :: (FailedItems)
  }


newtype AddRemoveAttributesFindingArnList = AddRemoveAttributesFindingArnList (Array Arn)


-- | <p>Used in the exception error that is thrown if you start an assessment run for an assessment target that includes an EC2 instance that is already participating in another started assessment run.</p>
newtype AgentAlreadyRunningAssessment = AgentAlreadyRunningAssessment 
  { "AgentId'" :: (AgentId)
  , "AssessmentRunArn'" :: (Arn)
  }


newtype AgentAlreadyRunningAssessmentList = AgentAlreadyRunningAssessmentList (Array AgentAlreadyRunningAssessment)


-- | <p>Contains information about an Amazon Inspector agent. This data type is used as a request parameter in the <a>ListAssessmentRunAgents</a> action.</p>
newtype AgentFilter = AgentFilter 
  { "AgentHealths'" :: (AgentHealthList)
  , "AgentHealthCodes'" :: (AgentHealthCodeList)
  }


newtype AgentHealth = AgentHealth String


newtype AgentHealthCode = AgentHealthCode String


newtype AgentHealthCodeList = AgentHealthCodeList (Array AgentHealthCode)


newtype AgentHealthList = AgentHealthList (Array AgentHealth)


newtype AgentId = AgentId String


newtype AgentIdList = AgentIdList (Array AgentId)


-- | <p>Used as a response element in the <a>PreviewAgents</a> action.</p>
newtype AgentPreview = AgentPreview 
  { "Hostname'" :: NullOrUndefined (Hostname)
  , "AgentId'" :: (AgentId)
  , "AutoScalingGroup'" :: NullOrUndefined (AutoScalingGroup)
  , "AgentHealth'" :: NullOrUndefined (AgentHealth)
  , "AgentVersion'" :: NullOrUndefined (AgentVersion)
  , "OperatingSystem'" :: NullOrUndefined (OperatingSystem)
  , "KernelVersion'" :: NullOrUndefined (KernelVersion)
  , "Ipv4Address'" :: NullOrUndefined (Ipv4Address)
  }


newtype AgentPreviewList = AgentPreviewList (Array AgentPreview)


newtype AgentVersion = AgentVersion String


-- | <p>You started an assessment run, but one of the instances is already participating in another assessment run.</p>
newtype AgentsAlreadyRunningAssessmentException = AgentsAlreadyRunningAssessmentException 
  { "Message'" :: (ErrorMessage)
  , "Agents'" :: (AgentAlreadyRunningAssessmentList)
  , "AgentsTruncated'" :: (Bool)
  , "CanRetry'" :: (Bool)
  }


newtype AmiId = AmiId String


newtype Arn = Arn String


newtype ArnCount = ArnCount Int


newtype AssessmentRulesPackageArnList = AssessmentRulesPackageArnList (Array Arn)


-- | <p>A snapshot of an Amazon Inspector assessment run that contains the findings of the assessment run .</p> <p>Used as the response element in the <a>DescribeAssessmentRuns</a> action.</p>
newtype AssessmentRun = AssessmentRun 
  { "Arn'" :: (Arn)
  , "Name'" :: (AssessmentRunName)
  , "AssessmentTemplateArn'" :: (Arn)
  , "State'" :: (AssessmentRunState)
  , "DurationInSeconds'" :: (AssessmentRunDuration)
  , "RulesPackageArns'" :: (AssessmentRulesPackageArnList)
  , "UserAttributesForFindings'" :: (UserAttributeList)
  , "CreatedAt'" :: (Number)
  , "StartedAt'" :: NullOrUndefined (Number)
  , "CompletedAt'" :: NullOrUndefined (Number)
  , "StateChangedAt'" :: (Number)
  , "DataCollected'" :: (Bool)
  , "StateChanges'" :: (AssessmentRunStateChangeList)
  , "Notifications'" :: (AssessmentRunNotificationList)
  , "FindingCounts'" :: (AssessmentRunFindingCounts)
  }


-- | <p>Contains information about an Amazon Inspector agent. This data type is used as a response element in the <a>ListAssessmentRunAgents</a> action.</p>
newtype AssessmentRunAgent = AssessmentRunAgent 
  { "AgentId'" :: (AgentId)
  , "AssessmentRunArn'" :: (Arn)
  , "AgentHealth'" :: (AgentHealth)
  , "AgentHealthCode'" :: (AgentHealthCode)
  , "AgentHealthDetails'" :: NullOrUndefined (Message)
  , "AutoScalingGroup'" :: NullOrUndefined (AutoScalingGroup)
  , "TelemetryMetadata'" :: (TelemetryMetadataList)
  }


newtype AssessmentRunAgentList = AssessmentRunAgentList (Array AssessmentRunAgent)


newtype AssessmentRunDuration = AssessmentRunDuration Int


-- | <p>Used as the request parameter in the <a>ListAssessmentRuns</a> action.</p>
newtype AssessmentRunFilter = AssessmentRunFilter 
  { "NamePattern'" :: NullOrUndefined (NamePattern)
  , "States'" :: NullOrUndefined (AssessmentRunStateList)
  , "DurationRange'" :: NullOrUndefined (DurationRange)
  , "RulesPackageArns'" :: NullOrUndefined (FilterRulesPackageArnList)
  , "StartTimeRange'" :: NullOrUndefined (TimestampRange)
  , "CompletionTimeRange'" :: NullOrUndefined (TimestampRange)
  , "StateChangeTimeRange'" :: NullOrUndefined (TimestampRange)
  }


newtype AssessmentRunFindingCounts = AssessmentRunFindingCounts (Map Severity FindingCount)


newtype AssessmentRunInProgressArnList = AssessmentRunInProgressArnList (Array Arn)


-- | <p>You cannot perform a specified action if an assessment run is currently in progress.</p>
newtype AssessmentRunInProgressException = AssessmentRunInProgressException 
  { "Message'" :: (ErrorMessage)
  , "AssessmentRunArns'" :: (AssessmentRunInProgressArnList)
  , "AssessmentRunArnsTruncated'" :: (Bool)
  , "CanRetry'" :: (Bool)
  }


newtype AssessmentRunList = AssessmentRunList (Array AssessmentRun)


newtype AssessmentRunName = AssessmentRunName String


-- | <p>Used as one of the elements of the <a>AssessmentRun</a> data type.</p>
newtype AssessmentRunNotification = AssessmentRunNotification 
  { "Date'" :: (Number)
  , "Event'" :: (InspectorEvent)
  , "Message'" :: NullOrUndefined (Message)
  , "Error'" :: (Bool)
  , "SnsTopicArn'" :: NullOrUndefined (Arn)
  , "SnsPublishStatusCode'" :: NullOrUndefined (AssessmentRunNotificationSnsStatusCode)
  }


newtype AssessmentRunNotificationList = AssessmentRunNotificationList (Array AssessmentRunNotification)


newtype AssessmentRunNotificationSnsStatusCode = AssessmentRunNotificationSnsStatusCode String


newtype AssessmentRunState = AssessmentRunState String


-- | <p>Used as one of the elements of the <a>AssessmentRun</a> data type.</p>
newtype AssessmentRunStateChange = AssessmentRunStateChange 
  { "StateChangedAt'" :: (Number)
  , "State'" :: (AssessmentRunState)
  }


newtype AssessmentRunStateChangeList = AssessmentRunStateChangeList (Array AssessmentRunStateChange)


newtype AssessmentRunStateList = AssessmentRunStateList (Array AssessmentRunState)


-- | <p>Contains information about an Amazon Inspector application. This data type is used as the response element in the <a>DescribeAssessmentTargets</a> action.</p>
newtype AssessmentTarget = AssessmentTarget 
  { "Arn'" :: (Arn)
  , "Name'" :: (AssessmentTargetName)
  , "ResourceGroupArn'" :: (Arn)
  , "CreatedAt'" :: (Number)
  , "UpdatedAt'" :: (Number)
  }


-- | <p>Used as the request parameter in the <a>ListAssessmentTargets</a> action.</p>
newtype AssessmentTargetFilter = AssessmentTargetFilter 
  { "AssessmentTargetNamePattern'" :: NullOrUndefined (NamePattern)
  }


newtype AssessmentTargetList = AssessmentTargetList (Array AssessmentTarget)


newtype AssessmentTargetName = AssessmentTargetName String


-- | <p>Contains information about an Amazon Inspector assessment template. This data type is used as the response element in the <a>DescribeAssessmentTemplates</a> action.</p>
newtype AssessmentTemplate = AssessmentTemplate 
  { "Arn'" :: (Arn)
  , "Name'" :: (AssessmentTemplateName)
  , "AssessmentTargetArn'" :: (Arn)
  , "DurationInSeconds'" :: (AssessmentRunDuration)
  , "RulesPackageArns'" :: (AssessmentTemplateRulesPackageArnList)
  , "UserAttributesForFindings'" :: (UserAttributeList)
  , "LastAssessmentRunArn'" :: NullOrUndefined (Arn)
  , "AssessmentRunCount'" :: (ArnCount)
  , "CreatedAt'" :: (Number)
  }


-- | <p>Used as the request parameter in the <a>ListAssessmentTemplates</a> action.</p>
newtype AssessmentTemplateFilter = AssessmentTemplateFilter 
  { "NamePattern'" :: NullOrUndefined (NamePattern)
  , "DurationRange'" :: NullOrUndefined (DurationRange)
  , "RulesPackageArns'" :: NullOrUndefined (FilterRulesPackageArnList)
  }


newtype AssessmentTemplateList = AssessmentTemplateList (Array AssessmentTemplate)


newtype AssessmentTemplateName = AssessmentTemplateName String


newtype AssessmentTemplateRulesPackageArnList = AssessmentTemplateRulesPackageArnList (Array Arn)


-- | <p>A collection of attributes of the host from which the finding is generated.</p>
newtype AssetAttributes = AssetAttributes 
  { "SchemaVersion'" :: (NumericVersion)
  , "AgentId'" :: NullOrUndefined (AgentId)
  , "AutoScalingGroup'" :: NullOrUndefined (AutoScalingGroup)
  , "AmiId'" :: NullOrUndefined (AmiId)
  , "Hostname'" :: NullOrUndefined (Hostname)
  , "Ipv4Addresses'" :: NullOrUndefined (Ipv4AddressList)
  }


newtype AssetType = AssetType String


-- | <p>This data type is used as a request parameter in the <a>AddAttributesToFindings</a> and <a>CreateAssessmentTemplate</a> actions.</p>
newtype Attribute = Attribute 
  { "Key'" :: (AttributeKey)
  , "Value'" :: NullOrUndefined (AttributeValue)
  }


newtype AttributeKey = AttributeKey String


newtype AttributeList = AttributeList (Array Attribute)


newtype AttributeValue = AttributeValue String


newtype AutoScalingGroup = AutoScalingGroup String


newtype AutoScalingGroupList = AutoScalingGroupList (Array AutoScalingGroup)


newtype BatchDescribeArnList = BatchDescribeArnList (Array Arn)


newtype Bool = Bool Boolean


newtype CreateAssessmentTargetRequest = CreateAssessmentTargetRequest 
  { "AssessmentTargetName'" :: (AssessmentTargetName)
  , "ResourceGroupArn'" :: (Arn)
  }


newtype CreateAssessmentTargetResponse = CreateAssessmentTargetResponse 
  { "AssessmentTargetArn'" :: (Arn)
  }


newtype CreateAssessmentTemplateRequest = CreateAssessmentTemplateRequest 
  { "AssessmentTargetArn'" :: (Arn)
  , "AssessmentTemplateName'" :: (AssessmentTemplateName)
  , "DurationInSeconds'" :: (AssessmentRunDuration)
  , "RulesPackageArns'" :: (AssessmentTemplateRulesPackageArnList)
  , "UserAttributesForFindings'" :: NullOrUndefined (UserAttributeList)
  }


newtype CreateAssessmentTemplateResponse = CreateAssessmentTemplateResponse 
  { "AssessmentTemplateArn'" :: (Arn)
  }


newtype CreateResourceGroupRequest = CreateResourceGroupRequest 
  { "ResourceGroupTags'" :: (ResourceGroupTags)
  }


newtype CreateResourceGroupResponse = CreateResourceGroupResponse 
  { "ResourceGroupArn'" :: (Arn)
  }


newtype DeleteAssessmentRunRequest = DeleteAssessmentRunRequest 
  { "AssessmentRunArn'" :: (Arn)
  }


newtype DeleteAssessmentTargetRequest = DeleteAssessmentTargetRequest 
  { "AssessmentTargetArn'" :: (Arn)
  }


newtype DeleteAssessmentTemplateRequest = DeleteAssessmentTemplateRequest 
  { "AssessmentTemplateArn'" :: (Arn)
  }


newtype DescribeAssessmentRunsRequest = DescribeAssessmentRunsRequest 
  { "AssessmentRunArns'" :: (BatchDescribeArnList)
  }


newtype DescribeAssessmentRunsResponse = DescribeAssessmentRunsResponse 
  { "AssessmentRuns'" :: (AssessmentRunList)
  , "FailedItems'" :: (FailedItems)
  }


newtype DescribeAssessmentTargetsRequest = DescribeAssessmentTargetsRequest 
  { "AssessmentTargetArns'" :: (BatchDescribeArnList)
  }


newtype DescribeAssessmentTargetsResponse = DescribeAssessmentTargetsResponse 
  { "AssessmentTargets'" :: (AssessmentTargetList)
  , "FailedItems'" :: (FailedItems)
  }


newtype DescribeAssessmentTemplatesRequest = DescribeAssessmentTemplatesRequest 
  { "AssessmentTemplateArns'" :: (BatchDescribeArnList)
  }


newtype DescribeAssessmentTemplatesResponse = DescribeAssessmentTemplatesResponse 
  { "AssessmentTemplates'" :: (AssessmentTemplateList)
  , "FailedItems'" :: (FailedItems)
  }


newtype DescribeCrossAccountAccessRoleResponse = DescribeCrossAccountAccessRoleResponse 
  { "RoleArn'" :: (Arn)
  , "Valid'" :: (Bool)
  , "RegisteredAt'" :: (Number)
  }


newtype DescribeFindingsRequest = DescribeFindingsRequest 
  { "FindingArns'" :: (BatchDescribeArnList)
  , "Locale'" :: NullOrUndefined (Locale)
  }


newtype DescribeFindingsResponse = DescribeFindingsResponse 
  { "Findings'" :: (FindingList)
  , "FailedItems'" :: (FailedItems)
  }


newtype DescribeResourceGroupsRequest = DescribeResourceGroupsRequest 
  { "ResourceGroupArns'" :: (BatchDescribeArnList)
  }


newtype DescribeResourceGroupsResponse = DescribeResourceGroupsResponse 
  { "ResourceGroups'" :: (ResourceGroupList)
  , "FailedItems'" :: (FailedItems)
  }


newtype DescribeRulesPackagesRequest = DescribeRulesPackagesRequest 
  { "RulesPackageArns'" :: (BatchDescribeArnList)
  , "Locale'" :: NullOrUndefined (Locale)
  }


newtype DescribeRulesPackagesResponse = DescribeRulesPackagesResponse 
  { "RulesPackages'" :: (RulesPackageList)
  , "FailedItems'" :: (FailedItems)
  }


-- | <p>This data type is used in the <a>AssessmentTemplateFilter</a> data type.</p>
newtype DurationRange = DurationRange 
  { "MinSeconds'" :: NullOrUndefined (AssessmentRunDuration)
  , "MaxSeconds'" :: NullOrUndefined (AssessmentRunDuration)
  }


newtype ErrorMessage = ErrorMessage String


-- | <p>This data type is used in the <a>Subscription</a> data type.</p>
newtype EventSubscription = EventSubscription 
  { "Event'" :: (InspectorEvent)
  , "SubscribedAt'" :: (Number)
  }


newtype EventSubscriptionList = EventSubscriptionList (Array EventSubscription)


-- | <p>Includes details about the failed items.</p>
newtype FailedItemDetails = FailedItemDetails 
  { "FailureCode'" :: (FailedItemErrorCode)
  , "Retryable'" :: (Bool)
  }


newtype FailedItemErrorCode = FailedItemErrorCode String


newtype FailedItems = FailedItems (Map Arn FailedItemDetails)


newtype FilterRulesPackageArnList = FilterRulesPackageArnList (Array Arn)


-- | <p>Contains information about an Amazon Inspector finding. This data type is used as the response element in the <a>DescribeFindings</a> action.</p>
newtype Finding = Finding 
  { "Arn'" :: (Arn)
  , "SchemaVersion'" :: NullOrUndefined (NumericVersion)
  , "Service'" :: NullOrUndefined (ServiceName)
  , "ServiceAttributes'" :: NullOrUndefined (InspectorServiceAttributes)
  , "AssetType'" :: NullOrUndefined (AssetType)
  , "AssetAttributes'" :: NullOrUndefined (AssetAttributes)
  , "Id'" :: NullOrUndefined (FindingId)
  , "Title'" :: NullOrUndefined (Text)
  , "Description'" :: NullOrUndefined (Text)
  , "Recommendation'" :: NullOrUndefined (Text)
  , "Severity'" :: NullOrUndefined (Severity)
  , "NumericSeverity'" :: NullOrUndefined (NumericSeverity)
  , "Confidence'" :: NullOrUndefined (IocConfidence)
  , "IndicatorOfCompromise'" :: NullOrUndefined (Bool)
  , "Attributes'" :: (AttributeList)
  , "UserAttributes'" :: (UserAttributeList)
  , "CreatedAt'" :: (Number)
  , "UpdatedAt'" :: (Number)
  }


newtype FindingCount = FindingCount Int


-- | <p>This data type is used as a request parameter in the <a>ListFindings</a> action.</p>
newtype FindingFilter = FindingFilter 
  { "AgentIds'" :: NullOrUndefined (AgentIdList)
  , "AutoScalingGroups'" :: NullOrUndefined (AutoScalingGroupList)
  , "RuleNames'" :: NullOrUndefined (RuleNameList)
  , "Severities'" :: NullOrUndefined (SeverityList)
  , "RulesPackageArns'" :: NullOrUndefined (FilterRulesPackageArnList)
  , "Attributes'" :: NullOrUndefined (AttributeList)
  , "UserAttributes'" :: NullOrUndefined (AttributeList)
  , "CreationTimeRange'" :: NullOrUndefined (TimestampRange)
  }


newtype FindingId = FindingId String


newtype FindingList = FindingList (Array Finding)


newtype GetAssessmentReportRequest = GetAssessmentReportRequest 
  { "AssessmentRunArn'" :: (Arn)
  , "ReportFileFormat'" :: (ReportFileFormat)
  , "ReportType'" :: (ReportType)
  }


newtype GetAssessmentReportResponse = GetAssessmentReportResponse 
  { "Status'" :: (ReportStatus)
  , "Url'" :: NullOrUndefined (Url)
  }


newtype GetTelemetryMetadataRequest = GetTelemetryMetadataRequest 
  { "AssessmentRunArn'" :: (Arn)
  }


newtype GetTelemetryMetadataResponse = GetTelemetryMetadataResponse 
  { "TelemetryMetadata'" :: (TelemetryMetadataList)
  }


newtype Hostname = Hostname String


newtype InspectorEvent = InspectorEvent String


-- | <p>This data type is used in the <a>Finding</a> data type.</p>
newtype InspectorServiceAttributes = InspectorServiceAttributes 
  { "SchemaVersion'" :: (NumericVersion)
  , "AssessmentRunArn'" :: NullOrUndefined (Arn)
  , "RulesPackageArn'" :: NullOrUndefined (Arn)
  }


-- | <p>Internal server error.</p>
newtype InternalException = InternalException 
  { "Message'" :: (ErrorMessage)
  , "CanRetry'" :: (Bool)
  }


newtype InvalidCrossAccountRoleErrorCode = InvalidCrossAccountRoleErrorCode String


-- | <p>Amazon Inspector cannot assume the cross-account role that it needs to list your EC2 instances during the assessment run.</p>
newtype InvalidCrossAccountRoleException = InvalidCrossAccountRoleException 
  { "Message'" :: (ErrorMessage)
  , "ErrorCode'" :: (InvalidCrossAccountRoleErrorCode)
  , "CanRetry'" :: (Bool)
  }


newtype InvalidInputErrorCode = InvalidInputErrorCode String


-- | <p>The request was rejected because an invalid or out-of-range value was supplied for an input parameter.</p>
newtype InvalidInputException = InvalidInputException 
  { "Message'" :: (ErrorMessage)
  , "ErrorCode'" :: (InvalidInputErrorCode)
  , "CanRetry'" :: (Bool)
  }


newtype IocConfidence = IocConfidence Int


newtype Ipv4Address = Ipv4Address String


newtype Ipv4AddressList = Ipv4AddressList (Array Ipv4Address)


newtype KernelVersion = KernelVersion String


newtype LimitExceededErrorCode = LimitExceededErrorCode String


-- | <p>The request was rejected because it attempted to create resources beyond the current AWS account limits. The error code describes the limit exceeded.</p>
newtype LimitExceededException = LimitExceededException 
  { "Message'" :: (ErrorMessage)
  , "ErrorCode'" :: (LimitExceededErrorCode)
  , "CanRetry'" :: (Bool)
  }


newtype ListAssessmentRunAgentsRequest = ListAssessmentRunAgentsRequest 
  { "AssessmentRunArn'" :: (Arn)
  , "Filter'" :: NullOrUndefined (AgentFilter)
  , "NextToken'" :: NullOrUndefined (PaginationToken)
  , "MaxResults'" :: NullOrUndefined (ListMaxResults)
  }


newtype ListAssessmentRunAgentsResponse = ListAssessmentRunAgentsResponse 
  { "AssessmentRunAgents'" :: (AssessmentRunAgentList)
  , "NextToken'" :: NullOrUndefined (PaginationToken)
  }


newtype ListAssessmentRunsRequest = ListAssessmentRunsRequest 
  { "AssessmentTemplateArns'" :: NullOrUndefined (ListParentArnList)
  , "Filter'" :: NullOrUndefined (AssessmentRunFilter)
  , "NextToken'" :: NullOrUndefined (PaginationToken)
  , "MaxResults'" :: NullOrUndefined (ListMaxResults)
  }


newtype ListAssessmentRunsResponse = ListAssessmentRunsResponse 
  { "AssessmentRunArns'" :: (ListReturnedArnList)
  , "NextToken'" :: NullOrUndefined (PaginationToken)
  }


newtype ListAssessmentTargetsRequest = ListAssessmentTargetsRequest 
  { "Filter'" :: NullOrUndefined (AssessmentTargetFilter)
  , "NextToken'" :: NullOrUndefined (PaginationToken)
  , "MaxResults'" :: NullOrUndefined (ListMaxResults)
  }


newtype ListAssessmentTargetsResponse = ListAssessmentTargetsResponse 
  { "AssessmentTargetArns'" :: (ListReturnedArnList)
  , "NextToken'" :: NullOrUndefined (PaginationToken)
  }


newtype ListAssessmentTemplatesRequest = ListAssessmentTemplatesRequest 
  { "AssessmentTargetArns'" :: NullOrUndefined (ListParentArnList)
  , "Filter'" :: NullOrUndefined (AssessmentTemplateFilter)
  , "NextToken'" :: NullOrUndefined (PaginationToken)
  , "MaxResults'" :: NullOrUndefined (ListMaxResults)
  }


newtype ListAssessmentTemplatesResponse = ListAssessmentTemplatesResponse 
  { "AssessmentTemplateArns'" :: (ListReturnedArnList)
  , "NextToken'" :: NullOrUndefined (PaginationToken)
  }


newtype ListEventSubscriptionsMaxResults = ListEventSubscriptionsMaxResults Int


newtype ListEventSubscriptionsRequest = ListEventSubscriptionsRequest 
  { "ResourceArn'" :: NullOrUndefined (Arn)
  , "NextToken'" :: NullOrUndefined (PaginationToken)
  , "MaxResults'" :: NullOrUndefined (ListEventSubscriptionsMaxResults)
  }


newtype ListEventSubscriptionsResponse = ListEventSubscriptionsResponse 
  { "Subscriptions'" :: (SubscriptionList)
  , "NextToken'" :: NullOrUndefined (PaginationToken)
  }


newtype ListFindingsRequest = ListFindingsRequest 
  { "AssessmentRunArns'" :: NullOrUndefined (ListParentArnList)
  , "Filter'" :: NullOrUndefined (FindingFilter)
  , "NextToken'" :: NullOrUndefined (PaginationToken)
  , "MaxResults'" :: NullOrUndefined (ListMaxResults)
  }


newtype ListFindingsResponse = ListFindingsResponse 
  { "FindingArns'" :: (ListReturnedArnList)
  , "NextToken'" :: NullOrUndefined (PaginationToken)
  }


newtype ListMaxResults = ListMaxResults Int


newtype ListParentArnList = ListParentArnList (Array Arn)


newtype ListReturnedArnList = ListReturnedArnList (Array Arn)


newtype ListRulesPackagesRequest = ListRulesPackagesRequest 
  { "NextToken'" :: NullOrUndefined (PaginationToken)
  , "MaxResults'" :: NullOrUndefined (ListMaxResults)
  }


newtype ListRulesPackagesResponse = ListRulesPackagesResponse 
  { "RulesPackageArns'" :: (ListReturnedArnList)
  , "NextToken'" :: NullOrUndefined (PaginationToken)
  }


newtype ListTagsForResourceRequest = ListTagsForResourceRequest 
  { "ResourceArn'" :: (Arn)
  }


newtype ListTagsForResourceResponse = ListTagsForResourceResponse 
  { "Tags'" :: (TagList)
  }


newtype Locale = Locale String


newtype Message = Message String


newtype MessageType = MessageType String


newtype NamePattern = NamePattern String


newtype NoSuchEntityErrorCode = NoSuchEntityErrorCode String


-- | <p>The request was rejected because it referenced an entity that does not exist. The error code describes the entity.</p>
newtype NoSuchEntityException = NoSuchEntityException 
  { "Message'" :: (ErrorMessage)
  , "ErrorCode'" :: (NoSuchEntityErrorCode)
  , "CanRetry'" :: (Bool)
  }


newtype NumericSeverity = NumericSeverity Number


newtype NumericVersion = NumericVersion Int


newtype OperatingSystem = OperatingSystem String


newtype PaginationToken = PaginationToken String


newtype PreviewAgentsMaxResults = PreviewAgentsMaxResults Int


newtype PreviewAgentsRequest = PreviewAgentsRequest 
  { "PreviewAgentsArn'" :: (Arn)
  , "NextToken'" :: NullOrUndefined (PaginationToken)
  , "MaxResults'" :: NullOrUndefined (PreviewAgentsMaxResults)
  }


newtype PreviewAgentsResponse = PreviewAgentsResponse 
  { "AgentPreviews'" :: (AgentPreviewList)
  , "NextToken'" :: NullOrUndefined (PaginationToken)
  }


newtype ProviderName = ProviderName String


newtype RegisterCrossAccountAccessRoleRequest = RegisterCrossAccountAccessRoleRequest 
  { "RoleArn'" :: (Arn)
  }


newtype RemoveAttributesFromFindingsRequest = RemoveAttributesFromFindingsRequest 
  { "FindingArns'" :: (AddRemoveAttributesFindingArnList)
  , "AttributeKeys'" :: (UserAttributeKeyList)
  }


newtype RemoveAttributesFromFindingsResponse = RemoveAttributesFromFindingsResponse 
  { "FailedItems'" :: (FailedItems)
  }


newtype ReportFileFormat = ReportFileFormat String


newtype ReportStatus = ReportStatus String


newtype ReportType = ReportType String


-- | <p>Contains information about a resource group. The resource group defines a set of tags that, when queried, identify the AWS resources that make up the assessment target. This data type is used as the response element in the <a>DescribeResourceGroups</a> action.</p>
newtype ResourceGroup = ResourceGroup 
  { "Arn'" :: (Arn)
  , "Tags'" :: (ResourceGroupTags)
  , "CreatedAt'" :: (Number)
  }


newtype ResourceGroupList = ResourceGroupList (Array ResourceGroup)


-- | <p>This data type is used as one of the elements of the <a>ResourceGroup</a> data type.</p>
newtype ResourceGroupTag = ResourceGroupTag 
  { "Key'" :: (TagKey)
  , "Value'" :: NullOrUndefined (TagValue)
  }


newtype ResourceGroupTags = ResourceGroupTags (Array ResourceGroupTag)


newtype RuleName = RuleName String


newtype RuleNameList = RuleNameList (Array RuleName)


-- | <p>Contains information about an Amazon Inspector rules package. This data type is used as the response element in the <a>DescribeRulesPackages</a> action.</p>
newtype RulesPackage = RulesPackage 
  { "Arn'" :: (Arn)
  , "Name'" :: (RulesPackageName)
  , "Version'" :: (Version)
  , "Provider'" :: (ProviderName)
  , "Description'" :: NullOrUndefined (Text)
  }


newtype RulesPackageList = RulesPackageList (Array RulesPackage)


newtype RulesPackageName = RulesPackageName String


newtype ServiceName = ServiceName String


newtype SetTagsForResourceRequest = SetTagsForResourceRequest 
  { "ResourceArn'" :: (Arn)
  , "Tags'" :: NullOrUndefined (TagList)
  }


newtype Severity = Severity String


newtype SeverityList = SeverityList (Array Severity)


newtype StartAssessmentRunRequest = StartAssessmentRunRequest 
  { "AssessmentTemplateArn'" :: (Arn)
  , "AssessmentRunName'" :: NullOrUndefined (AssessmentRunName)
  }


newtype StartAssessmentRunResponse = StartAssessmentRunResponse 
  { "AssessmentRunArn'" :: (Arn)
  }


newtype StopAction = StopAction String


newtype StopAssessmentRunRequest = StopAssessmentRunRequest 
  { "AssessmentRunArn'" :: (Arn)
  , "StopAction'" :: NullOrUndefined (StopAction)
  }


newtype SubscribeToEventRequest = SubscribeToEventRequest 
  { "ResourceArn'" :: (Arn)
  , "Event'" :: (InspectorEvent)
  , "TopicArn'" :: (Arn)
  }


-- | <p>This data type is used as a response element in the <a>ListEventSubscriptions</a> action.</p>
newtype Subscription = Subscription 
  { "ResourceArn'" :: (Arn)
  , "TopicArn'" :: (Arn)
  , "EventSubscriptions'" :: (EventSubscriptionList)
  }


newtype SubscriptionList = SubscriptionList (Array Subscription)


-- | <p>A key and value pair. This data type is used as a request parameter in the <a>SetTagsForResource</a> action and a response element in the <a>ListTagsForResource</a> action.</p>
newtype Tag = Tag 
  { "Key'" :: (TagKey)
  , "Value'" :: NullOrUndefined (TagValue)
  }


newtype TagKey = TagKey String


newtype TagList = TagList (Array Tag)


newtype TagValue = TagValue String


-- | <p>The metadata about the Amazon Inspector application data metrics collected by the agent. This data type is used as the response element in the <a>GetTelemetryMetadata</a> action.</p>
newtype TelemetryMetadata = TelemetryMetadata 
  { "MessageType'" :: (MessageType)
  , "Count'" :: (Number)
  , "DataSize'" :: NullOrUndefined (Number)
  }


newtype TelemetryMetadataList = TelemetryMetadataList (Array TelemetryMetadata)


newtype Text = Text String


-- | <p>This data type is used in the <a>AssessmentRunFilter</a> data type.</p>
newtype TimestampRange = TimestampRange 
  { "BeginDate'" :: NullOrUndefined (Number)
  , "EndDate'" :: NullOrUndefined (Number)
  }


newtype UnsubscribeFromEventRequest = UnsubscribeFromEventRequest 
  { "ResourceArn'" :: (Arn)
  , "Event'" :: (InspectorEvent)
  , "TopicArn'" :: (Arn)
  }


-- | <p>Used by the <a>GetAssessmentReport</a> API. The request was rejected because you tried to generate a report for an assessment run that existed before reporting was supported in Amazon Inspector. You can only generate reports for assessment runs that took place or will take place after generating reports in Amazon Inspector became available.</p>
newtype UnsupportedFeatureException = UnsupportedFeatureException 
  { "Message'" :: (ErrorMessage)
  , "CanRetry'" :: (Bool)
  }


newtype UpdateAssessmentTargetRequest = UpdateAssessmentTargetRequest 
  { "AssessmentTargetArn'" :: (Arn)
  , "AssessmentTargetName'" :: (AssessmentTargetName)
  , "ResourceGroupArn'" :: (Arn)
  }


newtype Url = Url String


newtype UserAttributeKeyList = UserAttributeKeyList (Array AttributeKey)


newtype UserAttributeList = UserAttributeList (Array Attribute)


newtype Version = Version String
